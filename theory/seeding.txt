        Seeding

Ларавел предоставляет удобный способ для автоматического заполнения таблиц
БД тестовыми данными.
Все сид-классы хранятся в папке database/seeds.
Имена сидов могут называться как угодно,
но принято называть:UsersTableSeeder
По умолчанию у нас уже есть класс DatabaseSeeder, в котором есть метод
call посредоством которого можно одним пакетом вызывать все сиды, которые
нам нужны.

        Создание сидов
Для создания сида в консоли пишем:
php artisan make:seeder UsersTableSeeder
По умолчанию класс содержит лишь один метод: run.
Он стартует при запуске команды db:seed.
В этом методе можно использовать какие либо другие методы, например
Query Builder или модели.

        Пример одиночной вставки
Для примера модефицируем DatabaseSeeder
public function run()
    {
        DB::table('users')->insert([
            'name' => Str::random(10),
            'email' => Str::random(10).'@gmail.com',
            'password' => bcrypt('secret'),
        ]);
    }

        Использование фабрики моделей
Ручное выставление полей и значений не совсем удобно, если нам необходимо
сделать несколько записей.
public function run()
{
    factory(App\User::class, 50)->create()->each(function ($user) {
        $user->posts()->save(factory(App\Post::class)->make());
    });
}

        Запуск нескольких сидов
В классе DatabaseSeeder вы можете использовать call метод для вызова
дополнительных сидов. Это позволяет при помощи одной команды в консоли,
заполнять такое кол-во таблиц такими данными, которыми вы хотите.

        Процедура запуска
composer dump-autoload
php artisan db:seed (запустится DatabaseSeeder) или
php artisan db:seed --class=UsersTableSeeder (запустится отделбный сид)

Или скомпоновать запуск миграции и сидов, что позволяет полностью откатить
БД и заполнить ее заново:
php artisan migrate:refresh --seed
